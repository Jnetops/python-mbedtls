# Python CircleCI 2.0 configuration file
# vi: et:ts=2:sw=2
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.6-stretch
    working_directory: ~/python-mbedtls
    steps:
      - checkout

      - run:
          name: Downgrade openssl for Python 3.4
          command: |
            sudo apt-get update
            sudo apt-get install libssl1.0-dev

      - run:
          name: Install pyenv
          command: |
            git clone https://github.com/pyenv/pyenv.git $HOME/python-mbedtls/.pyenv
            cat << 'EOF' >> $BASH_ENV
            export PYENV_ROOT="$HOME/python-mbedtls/.pyenv"
            export PATH="$PYENV_ROOT/bin:$PATH"
            EOF

      - restore_cache:
          keys:
            - py27-2.7.16-v0-{{ arch }}
      - run:
          name: Install python 2.7
          command: |
            if [ ! -d ".pyenv/versions/2.7.16" ]; then
              eval "$(pyenv init -)"
              pyenv install 2.7.16
            fi
      - save_cache:
          key: py27-2.7.16-v0-{{ arch }}
          paths:
            - .pyenv/versions/2.7.16

      - restore_cache:
          keys:
            - py34-3.4.10-v0-{{ arch }}
      - run:
          name: Install python 3.4
          command: |
            if [ ! -d ".pyenv/versions/3.4.10" ]; then
              eval "$(pyenv init -)"
              pyenv install 3.4.10
            fi
      - save_cache:
          key: py34-3.4.10-v0-{{ arch }}
          paths:
            - .pyenv/versions/3.4.10

      - restore_cache:
          keys:
            - py35-3.5.9-v0-{{ arch }}
      - run:
          name: Install python 3.5
          command: |
            if [ ! -d ".pyenv/versions/3.5.9" ]; then
              eval "$(pyenv init -)"
              pyenv install 3.5.9
            fi
      - save_cache:
          key: py35-3.5.9-v0-{{ arch }}
          paths:
            - .pyenv/versions/3.5.9

      - restore_cache:
          keys:
            - py36-3.6.10-v0-{{ arch }}
      - run:
          name: Install python 3.6
          command: |
            if [ ! -d ".pyenv/versions/3.6.10" ]; then
              eval "$(pyenv init -)"
              pyenv install 3.6.10
            fi
      - save_cache:
          key: py36-3.6.10-v0-{{ arch }}
          paths:
            - .pyenv/versions/3.6.10

      - restore_cache:
          keys:
            - py37-3.7.6-v0-{{ arch }}
      - run:
          name: Install python 3.7
          command: |
            if [ ! -d ".pyenv/versions/3.7.6" ]; then
              eval "$(pyenv init -)"
              pyenv install 3.7.6
            fi
      - save_cache:
          key: py37-3.7.6-v0-{{ arch }}
          paths:
            - .pyenv/versions/3.7.6

      - run:
          name: Install mbedtls
          command: |
            VERSION=2.16.3
            DESTDIR=$HOME/lib/$VERSION
            sudo apt-get install cmake
            sudo ./scripts/download-mbedtls.sh $VERSION $DESTDIR/src
            sudo ./scripts/install-mbedtls.sh $DESTDIR/src $DESTDIR
            cat << EOF >> $BASH_ENV
            export VERSION=$VERSION
            export DESTDIR=$DESTDIR
            export LD_LIBRARY_PATH=$DESTDIR/lib
            export C_INCLUDE_PATH=$DESTDIR/include
            export TOX_PARALLEL_NO_SPINNER=1
            EOF

      - run:
          name: Create environment
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements/circleci.txt

      - run:
          name: Run tests
          command: |
            eval "$(pyenv init -)"
            pyenv shell 2.7.16 3.4.10 3.5.9 3.6.10 3.7.6
            . venv/bin/activate
            tox --parallel auto -e py27,py34,py35,py36,py37-coveralls
            tox -e py37 --run-command "{envpython} -m doctest {toxinidir}/README.rst"

      - run:
          name: Build API documentation
          command: |
            eval "$(pyenv init -)"
            pyenv shell 3.7.6
            . venv/bin/activate
            tox -e py37-docs

      - run:
          name: Save docs
          when: on_success
          command: |
            mkdir -p out/
            cp -R .tox/docs_out out/docs

      - run:
          name: Save logs
          when: on_fail
          command: |
            mkdir -p out/log
            cp .tox/*/log/py*.log out/log || true

      - store_artifacts:
          path: out
          destination: artifacts
